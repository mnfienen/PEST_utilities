PEST_utilities Module
a m!ke@usgs joint
contact: mnfienen@usgs.gov

Several Utilties are included
################
# recRipper.py ##
################
This code parses a REC file from PEST and puts out
files to investigate the evolution of PHI over iterations.

The two output files are: basename.rec_tphi, which is to 
show total phi over iterations, and
basename.recout, which shows PHI components in the form that
can be used with Google plotting for "bubble charts".
Bubble Charts are also called Google Motion Charts:
http://code.google.com/apis/visualization/documentation/gallery/motionchart.html

################
# plot_bpas.py #
################
This code plots parameter values for each value over iterations in the
<basecase>.bpa.# files. The <basecase>.bpa file is ignored.

Output is <basecase>_parvalues.pdf with a page for each parameter.

###############################################
# plot_reis.py --> driving REIripperCONSOL.py #
###############################################
This code plots bar charts and one-to-one plots of residuals as recorded in
<basecase>.rei.# files. For each file, residuals are plotted by group
(including regularization groups which can, generally, be ignored).

Output files are:
<basecase><group>one2one.pdf
<basecase><group>histogram.pdf
<basecase><group>residuals_summary.dat

The one2one plots show modeled vs. measured plots.
The histogram plots show residuals as histograms to look for bias.
The summary files include testing for normality.

The PDF files are consolidated with a page per iteration.
This file, as of this commit, replaces the deprecated REIripper.py

#############################################################################
# re12arc.py --> GFLOW residuals linked with locations from TP file for ARC #
#############################################################################
This code reads an REI file and a TP file (exported from GFLOW) to align
residuals with X and Y locations for plotting in ARC. It creates a different
file for each observation group, also one with absolute residuals, another with
negative (over) and a final with positive (under) residuals showing bias.

###############################################################
# tweak_bounds.py --> adjust upper and lower bounds if failed #
###############################################################
Reads a PST control file and, if curent value is outside the range of bounds, 
the bound is moved out by 2 orders of magnitude. It's a kludge but can be useful and the USER MUST SPECIFY INPUT AND OUTPUT FILENAMES IN TOP OF CODE. 
